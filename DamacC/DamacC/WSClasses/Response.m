//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 1.1
// Date Of Creation: 2/21/2013 12:56:44 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "Response.h" 


@implementation Response

-(id)initWithArray:(NSArray*)array {
    self = [super init];
    if (self) {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeChildArray"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"CustomArray"]==NSOrderedSame)){
                    NSArray* array1= [[array objectAtIndex:i0] objectForKey:@"nodeChildArray"];
                    NSMutableArray* dataArray1= [[NSMutableArray alloc]init];
                    for (int i1=0; i1<[array1 count];i1++)
                    {
                        NSArray* arrayXml = [[array1  objectAtIndex:i1] objectForKey:@"nodeChildArray"];
                        WSPerson* item = [[WSPerson alloc] initWithArray:arrayXml];
                        [dataArray1  addObject:item];
                        [item release];
                    }
                    [self setCustomArray:dataArray1];
                    [dataArray1 release];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeChildArray"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"stringArray"]==NSOrderedSame)){
                    NSArray* array1= [[array objectAtIndex:i0] objectForKey:@"nodeChildArray"];
                    NSMutableArray* dataArray1= [[NSMutableArray alloc]init];
                    for (int i1=0; i1<[array1 count];i1++)
                    {
                        NSString* item = [[NSString alloc] initWithString:[[array1 objectAtIndex:i1] objectForKey:@"nodeContent"]];
                        [dataArray1  addObject:item];
                        [item release];
                    }
                    [self setStringArray:dataArray1];
                    [dataArray1 release];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"byteArray"]==NSOrderedSame)){
                    NSString* stringData = [[array  objectAtIndex:i0] objectForKey:@"nodeContentValue"];
                    NSData* nodeContentValue = [NSData dataFromBase64String:stringData];
                    [self setByteArray:nodeContentValue];
                    [nodeContentValue release];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"errMessage"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setErrMessage:nodeContentValue];
                    [nodeContentValue release];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"resultCode"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setResultCode:[nodeContentValue intValue]];
                    [nodeContentValue release];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}
-(NSString*)toString:(BOOL)addNameWrap {
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<Response>" ];
    if (self.customArray != nil) {
        [nsString appendFormat:@"<CustomArray>"];
        for(WSPerson *elm in self.customArray){
            [nsString appendFormat:@"%@", [elm toString:YES]];
        }
        [nsString appendFormat:@"</CustomArray>"];
    }
    if (self.stringArray != nil) {
        [nsString appendFormat:@"<stringArray>"];
        for(NSString *elm in self.stringArray){
            [nsString appendFormat:@"<string>%@</string>", elm];
        }
        [nsString appendFormat:@"</stringArray>"];
    }
    if (self.byteArray != nil) {
        [nsString appendFormat:@"<byteArray>%@<byteArray>",[self.byteArray base64EncodedString]];
    }
    if (self.errMessage != nil) {
        [nsString appendFormat:@"<errMessage>%@</errMessage>" , [self errMessage]];
    }
    [nsString appendFormat:@"<resultCode>%d</resultCode>" , [self resultCode]];
    if (addNameWrap == YES)
        [nsString appendString:@"</Response>" ];
    return nsString;
}

-(void)dealloc{
    [_customArray release];
    [_stringArray release];
    [_byteArray release];
    [_errMessage release];
    [super dealloc];
}
@end
