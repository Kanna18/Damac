//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 2.1
// Date Of Creation: 10/3/2018 10:15:47 AM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "AOPT.h" 


@implementation AOPT
-(NSString*)toString:(BOOL)addNameWrap {
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<AOPT>" ];
    [nsString appendFormat:@"<SoapVersion>%@</SoapVersion>" , [AOPT_Enums SoapProtocolVersionToString:[self soapVersion]]];
    [nsString appendFormat:@"<AllowAutoRedirect>%d</AllowAutoRedirect>" , [self allowAutoRedirect]];
    [nsString appendFormat:@"<EnableDecompression>%d</EnableDecompression>" , [self enableDecompression]];
    if (self.userAgent != nil) {
        [nsString appendFormat:@"<UserAgent>%@</UserAgent>" , [self userAgent]];
    }
    [nsString appendFormat:@"<UnsafeAuthenticatedConnectionSharing>%d</UnsafeAuthenticatedConnectionSharing>" , [self unsafeAuthenticatedConnectionSharing]];
    [nsString appendFormat:@"<UseDefaultCredentials>%d</UseDefaultCredentials>" , [self useDefaultCredentials]];
    if (self.connectionGroupName != nil) {
        [nsString appendFormat:@"<ConnectionGroupName>%@</ConnectionGroupName>" , [self connectionGroupName]];
    }
    [nsString appendFormat:@"<PreAuthenticate>%d</PreAuthenticate>" , [self preAuthenticate]];
    if (self.url != nil) {
        [nsString appendFormat:@"<Url>%@</Url>" , [self url]];
    }
    [nsString appendFormat:@"<Timeout>%d</Timeout>" , [self timeout]];
    if (addNameWrap == YES)
        [nsString appendString:@"</AOPT>" ];
    return nsString;
}

///Origin Return Type:NSString
-(void)EarlyHandoverPaymentPlanCreation:(NSString *)p_REGISTRATION_ID :(NSString *)p_SR_NUMBER :(NSString *)p_SR_TYPE :(NSString *)rEGISTRATION_ID :(NSString *)iNSTALLMENT :(NSString *)dESCRIPTION :(NSString *)pAYMENT_DATE :(NSString *)eXPECTED_DATE :(NSString *)mILESTONE_EVENT :(NSString *)pERCENT_VALUE :(NSString *)tRANSFER_AR_INTER_FLAG :(NSString *)pAYMENT_AMOUNT {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<EarlyHandoverPaymentPlanCreation xmlns=\"http://action.com\">"];
    [params appendFormat:@"<P_REGISTRATION_ID>%@</P_REGISTRATION_ID>" , p_REGISTRATION_ID];
    [params appendFormat:@"<P_SR_NUMBER>%@</P_SR_NUMBER>" , p_SR_NUMBER];
    [params appendFormat:@"<P_SR_TYPE>%@</P_SR_TYPE>" , p_SR_TYPE];
    [params appendFormat:@"<REGISTRATION_ID>%@</REGISTRATION_ID>" , rEGISTRATION_ID];
    [params appendFormat:@"<INSTALLMENT>%@</INSTALLMENT>" , iNSTALLMENT];
    [params appendFormat:@"<DESCRIPTION>%@</DESCRIPTION>" , dESCRIPTION];
    [params appendFormat:@"<PAYMENT_DATE>%@</PAYMENT_DATE>" , pAYMENT_DATE];
    [params appendFormat:@"<EXPECTED_DATE>%@</EXPECTED_DATE>" , eXPECTED_DATE];
    [params appendFormat:@"<MILESTONE_EVENT>%@</MILESTONE_EVENT>" , mILESTONE_EVENT];
    [params appendFormat:@"<PERCENT_VALUE>%@</PERCENT_VALUE>" , pERCENT_VALUE];
    [params appendFormat:@"<TRANSFER_AR_INTER_FLAG>%@</TRANSFER_AR_INTER_FLAG>" , tRANSFER_AR_INTER_FLAG];
    [params appendFormat:@"<PAYMENT_AMOUNT>%@</PAYMENT_AMOUNT>" , pAYMENT_AMOUNT];
    [params appendString:@"</EarlyHandoverPaymentPlanCreation>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:EarlyHandoverPaymentPlanCreation" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comEarlyHandoverPaymentPlanCreationDidFinish"];
}

///Origin Return Type:NSString
-(void)PaymentPlanReversalMultiple:(NSString *)p_REGISTRATION_ID :(NSString *)p_SR_NUMBER {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<PaymentPlanReversalMultiple xmlns=\"http://action.com\">"];
    [params appendFormat:@"<P_REGISTRATION_ID>%@</P_REGISTRATION_ID>" , p_REGISTRATION_ID];
    [params appendFormat:@"<P_SR_NUMBER>%@</P_SR_NUMBER>" , p_SR_NUMBER];
    [params appendString:@"</PaymentPlanReversalMultiple>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:PaymentPlanReversalMultiple" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comPaymentPlanReversalMultipleDidFinish"];
}

///Origin Return Type:NSString
-(void)PaymentPlanCreation:(NSString *)p_REGISTRATION_ID :(NSString *)p_SR_NUMBER :(NSString *)p_SR_TYPE :(NSMutableArray *)regTerms {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<PaymentPlanCreation xmlns=\"http://action.com\">"];
    [params appendFormat:@"<P_REGISTRATION_ID>%@</P_REGISTRATION_ID>" , p_REGISTRATION_ID];
    [params appendFormat:@"<P_SR_NUMBER>%@</P_SR_NUMBER>" , p_SR_NUMBER];
    [params appendFormat:@"<P_SR_TYPE>%@</P_SR_TYPE>" , p_SR_TYPE];
    [params appendString:@"<regTerms>" ];
    for(APPSXXDC_AOPT_PKG_WSX1843128X6X5 *elm in regTerms){
        [params appendFormat:@"%@", [elm toString:YES]];
    }
    [params appendString:@"</regTerms>" ];
    [params appendString:@"</PaymentPlanCreation>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:PaymentPlanCreation" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comPaymentPlanCreationDidFinish"];
}

///Origin Return Type:NSString
-(void)PaymentPlanReversal:(NSString *)p_REGISTRATION_ID :(NSString *)p_SR_NUMBER {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<PaymentPlanReversal xmlns=\"http://action.com\">"];
    [params appendFormat:@"<P_REGISTRATION_ID>%@</P_REGISTRATION_ID>" , p_REGISTRATION_ID];
    [params appendFormat:@"<P_SR_NUMBER>%@</P_SR_NUMBER>" , p_SR_NUMBER];
    [params appendString:@"</PaymentPlanReversal>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:PaymentPlanReversal" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comPaymentPlanReversalDidFinish"];
}

///Origin Return Type:NSString
-(void)DocumentAttachmentMultiple:(NSString *)p_REQUEST_NUMBER :(NSString *)p_REQUEST_NAME :(NSString *)p_SOURCE_SYSTEM :(NSMutableArray *)regTerms {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<DocumentAttachmentMultiple xmlns=\"http://action.com\">"];
    [params appendFormat:@"<P_REQUEST_NUMBER>%@</P_REQUEST_NUMBER>" , p_REQUEST_NUMBER];
    [params appendFormat:@"<P_REQUEST_NAME>%@</P_REQUEST_NAME>" , p_REQUEST_NAME];
    [params appendFormat:@"<P_SOURCE_SYSTEM>%@</P_SOURCE_SYSTEM>" , p_SOURCE_SYSTEM];
    [params appendString:@"<regTerms>" ];
    for(DocUploadDTO *elm in regTerms){
        [params appendFormat:@"%@", [elm toString:YES]];
    }
    [params appendString:@"</regTerms>" ];
    [params appendString:@"</DocumentAttachmentMultiple>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:DocumentAttachmentMultiple" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comDocumentAttachmentMultipleDidFinish"];
}

///Origin Return Type:NSString
-(void)DocumentAttachment:(NSString *)p_REQUEST_NUMBER :(NSString *)p_REQUEST_NAME :(NSString *)p_SOURCE_SYSTEM :(NSString *)sourceId :(NSString *)registrationId :(NSString *)entityName :(NSString *)category :(NSString *)fileId :(NSString *)fileName :(NSString *)fileDescription :(NSString *)sourceFileName :(Base64Binary *)b {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<DocumentAttachment xmlns=\"http://action.com\">"];
    [params appendFormat:@"<P_REQUEST_NUMBER>%@</P_REQUEST_NUMBER>" , p_REQUEST_NUMBER];
    [params appendFormat:@"<P_REQUEST_NAME>%@</P_REQUEST_NAME>" , p_REQUEST_NAME];
    [params appendFormat:@"<P_SOURCE_SYSTEM>%@</P_SOURCE_SYSTEM>" , p_SOURCE_SYSTEM];
    [params appendFormat:@"<SourceId>%@</SourceId>" , sourceId];
    [params appendFormat:@"<RegistrationId>%@</RegistrationId>" , registrationId];
    [params appendFormat:@"<EntityName>%@</EntityName>" , entityName];
    [params appendFormat:@"<Category>%@</Category>" , category];
    [params appendFormat:@"<FileId>%@</FileId>" , fileId];
    [params appendFormat:@"<FileName>%@</FileName>" , fileName];
    [params appendFormat:@"<FileDescription>%@</FileDescription>" , fileDescription];
    [params appendFormat:@"<SourceFileName>%@</SourceFileName>" , sourceFileName];
    if (b != nil) {
        [params appendFormat:@"<b>%@</b>" , [b toString:NO]];
    }
    [params appendString:@"</DocumentAttachment>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:DocumentAttachment" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comDocumentAttachmentDidFinish"];
}

///Origin Return Type:NSString
-(void)getMilestonePaymentDetails:(NSString *)rEGISTRATION_ID {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<getMilestonePaymentDetails xmlns=\"http://action.com\">"];
    [params appendFormat:@"<REGISTRATION_ID>%@</REGISTRATION_ID>" , rEGISTRATION_ID];
    [params appendString:@"</getMilestonePaymentDetails>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:getMilestonePaymentDetails" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comgetMilestonePaymentDetailsDidFinish"];
}

///Origin Return Type:NSString
-(void)RegistrationDetails:(NSString *)p_REGISTRATION_ID :(NSString *)p_SR_NUMBER {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<RegistrationDetails xmlns=\"http://action.com\">"];
    [params appendFormat:@"<P_REGISTRATION_ID>%@</P_REGISTRATION_ID>" , p_REGISTRATION_ID];
    [params appendFormat:@"<P_SR_NUMBER>%@</P_SR_NUMBER>" , p_SR_NUMBER];
    [params appendString:@"</RegistrationDetails>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:RegistrationDetails" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comRegistrationDetailsDidFinish"];
}

///Origin Return Type:NSString
-(void)PaymentPlanHistory:(NSString *)p_REGISTRATION_ID :(NSString *)p_SR_NUMBER {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<PaymentPlanHistory xmlns=\"http://action.com\">"];
    [params appendFormat:@"<P_REGISTRATION_ID>%@</P_REGISTRATION_ID>" , p_REGISTRATION_ID];
    [params appendFormat:@"<P_SR_NUMBER>%@</P_SR_NUMBER>" , p_SR_NUMBER];
    [params appendString:@"</PaymentPlanHistory>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:PaymentPlanHistory" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comPaymentPlanHistoryDidFinish"];
}

///Origin Return Type:NSString
-(void)PaymentPlanReversalCurrent:(NSString *)p_REGISTRATION_ID :(NSString *)p_SR_NUMBER {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<PaymentPlanReversalCurrent xmlns=\"http://action.com\">"];
    [params appendFormat:@"<P_REGISTRATION_ID>%@</P_REGISTRATION_ID>" , p_REGISTRATION_ID];
    [params appendFormat:@"<P_SR_NUMBER>%@</P_SR_NUMBER>" , p_SR_NUMBER];
    [params appendString:@"</PaymentPlanReversalCurrent>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:PaymentPlanReversalCurrent" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comPaymentPlanReversalCurrentDidFinish"];
}

///Origin Return Type:NSString
-(void)getMasterMilestone:(NSString *)rEGISTRATION_ID {
    NSMutableString *params = [NSMutableString string];
    [params appendString:@"<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body>"];
    [params appendString:@"<getMasterMilestone xmlns=\"http://action.com\">"];
    [params appendFormat:@"<REGISTRATION_ID>%@</REGISTRATION_ID>" , rEGISTRATION_ID];
    [params appendString:@"</getMasterMilestone>"];
    [params appendString:@"</soap:Body></soap:Envelope>"];
    NSURL *onwURL = [[NSURL alloc] initWithString:[self url]];
    NSMutableURLRequest *onwreq = [NSMutableURLRequest requestWithURL:onwURL cachePolicy:NSURLRequestReloadIgnoringLocalAndRemoteCacheData timeoutInterval:30.0];
    NSString *messageLen = [NSString stringWithFormat:@"%d", [params length]];
    [onwreq addValue:[onwURL host] forHTTPHeaderField:@"Host"];
    [onwreq addValue:@"urn:getMasterMilestone" forHTTPHeaderField:@"SOAPAction"];
    [onwreq addValue:@"text/xml; charset=utf-8" forHTTPHeaderField:@"Content-Type"];
    [onwreq addValue:messageLen forHTTPHeaderField:@"Content-Length"];
    [onwreq setHTTPMethod:@"POST"];
    [onwreq setHTTPBody:[params dataUsingEncoding:NSUTF8StringEncoding]];
    for (NSString *key  in [self.requestHeaders allKeys]) {
    		[onwreq addValue:[self.requestHeaders valueForKey:key] forHTTPHeaderField:key];
    }
    self.wsConnection = [[NSURLConnection alloc] initWithRequest:onwreq delegate:self];
    [self setEventName:@"http://action.comgetMasterMilestoneDidFinish"];
}
#pragma mark - NSCoding
-(id)initWithCoder:(NSCoder *)decoder{
    self = [super init];
    if (self){
        self.soapVersion = [decoder decodeInt32ForKey:@"soapVersion"];
        self.allowAutoRedirect = [decoder decodeInt32ForKey:@"allowAutoRedirect"];
        self.enableDecompression = [decoder decodeInt32ForKey:@"enableDecompression"];
        self.userAgent = [decoder decodeObjectForKey:@"userAgent"];
        self.unsafeAuthenticatedConnectionSharing = [decoder decodeInt32ForKey:@"unsafeAuthenticatedConnectionSharing"];
        self.useDefaultCredentials = [decoder decodeInt32ForKey:@"useDefaultCredentials"];
        self.connectionGroupName = [decoder decodeObjectForKey:@"connectionGroupName"];
        self.preAuthenticate = [decoder decodeInt32ForKey:@"preAuthenticate"];
        self.url = [decoder decodeObjectForKey:@"url"];
        self.timeout = [decoder decodeInt32ForKey:@"timeout"];
    }
    return self;
}
-(void)encodeWithCoder:(NSCoder *)encoder{
    [encoder encodeInt32:self.soapVersion forKey:@"soapVersion"];
    [encoder encodeInt32:self.allowAutoRedirect forKey:@"allowAutoRedirect"];
    [encoder encodeInt32:self.enableDecompression forKey:@"enableDecompression"];
    [encoder encodeObject:self.userAgent forKey:@"userAgent"];
    [encoder encodeInt32:self.unsafeAuthenticatedConnectionSharing forKey:@"unsafeAuthenticatedConnectionSharing"];
    [encoder encodeInt32:self.useDefaultCredentials forKey:@"useDefaultCredentials"];
    [encoder encodeObject:self.connectionGroupName forKey:@"connectionGroupName"];
    [encoder encodeInt32:self.preAuthenticate forKey:@"preAuthenticate"];
    [encoder encodeObject:self.url forKey:@"url"];
    [encoder encodeInt32:self.timeout forKey:@"timeout"];
}
-(id)copyWithZone:(NSZone *)zone {
    AOPT *finalCopy = [[[self class] allocWithZone: zone] init];
    
    finalCopy.soapVersion = self.soapVersion;
    
    finalCopy.allowAutoRedirect = self.allowAutoRedirect;
    
    finalCopy.enableDecompression = self.enableDecompression;
    
    NSString *copy4 = [self.userAgent copy];
    finalCopy.userAgent = copy4;
    
    finalCopy.unsafeAuthenticatedConnectionSharing = self.unsafeAuthenticatedConnectionSharing;
    
    finalCopy.useDefaultCredentials = self.useDefaultCredentials;
    
    NSString *copy7 = [self.connectionGroupName copy];
    finalCopy.connectionGroupName = copy7;
    
    finalCopy.preAuthenticate = self.preAuthenticate;
    
    NSString *copy9 = [self.url copy];
    finalCopy.url = copy9;
    
    finalCopy.timeout = self.timeout;
    
    return finalCopy;
}
-(id)init{
    self = [super init];
    if (self){
        [self setUrl:@""];
    }
    return self;
}

-(id) initWithTarget:(id)target  AndAction:(void(*)(id target,id sender ,NSString* xml))action;{
    self = [super init];
    if (self != nil) {
        [self setTargetAction:action];
        [self setActionDelegate:target];
    }
    return self;
}

-(void) addTarget:(id)target AndAction:(void(*)(id target,id sender,NSString* xml))action{
    self.actionDelegate = target;
    self.targetAction = action;
}

-(void)cancelConnection{
[self.wsConnection cancel];
}
#pragma mark -
#pragma mark NSConnection events
-(void)connection:(NSURLConnection *) connection didReceiveResponse:(NSURLResponse *) response{
    self.webData = [[NSMutableData alloc] init];
    [self.webData setLength:0];
}
-(void)connection:(NSURLConnection *) connection didReceiveData:(NSData *) data{
    [self.webData appendData:data];
}
-(void)connection:(NSURLConnection *) connection didFailWithError:(NSError *) err{
    [self setError:err];
    if (self.targetAction !=nil) {
        self.targetAction(self.actionDelegate,self,nil);
}
}
-(void)connectionDidFinishLoading:(NSURLConnection *) connection{
    NSString *xml = [[NSString alloc] initWithBytes:[self.webData mutableBytes] length:[self.webData length] encoding:NSUTF8StringEncoding];
    [self setError:nil];
    if (self.targetAction !=nil) {
        self.targetAction(self.actionDelegate,self,xml);
}
}

@end
